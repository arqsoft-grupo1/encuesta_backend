imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    mongodb_server: "mongodb://mongodb/encuesta_academica"
    #mongodb_server: "mongodb://mongo:mongo123@ds135486.mlab.com:35486/encuesta_academica"
    #mongodb_server: "mongodb://localhost:27017"

framework:
    #esi: ~
    #translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    serializer: { enabled: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
# doctrine:
#     dbal:
#         driver: pdo_pgsql
#         host: 'localhost'
#         port: '5432'
#         dbname: 'encuesta'
#         user: 'encuesta'
#         password: 'encuesta'
#         charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

# app/config/config.yml
doctrine_mongodb:
    connections:
        default:
            server: "%mongodb_server%"
            options: {}
    default_database: encuesta_academica
    document_managers:
        default:
            auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: gmail
    username: marprg@gmail.com
    password: zsgpwgozqgankijd
    # transport: '%mailer_transport%'
    # host: '%mailer_host%'
    # username: '%mailer_user%'
    # password: '%mailer_password%'
    # spool: { type: memory }

# Nelmio CORS Configuration
nelmio_cors:
    defaults:
        allow_credentials: false
        allow_origin: ['*']
        allow_headers: ['*']
        allow_methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS']
        max_age: 3600
        hosts: []
        origin_regex: false
        # forced_allow_origin_value: ~
    # paths:
    #     '^/api/':
    #         allow_origin: ['*']
    #         allow_headers: ['X-Custom-Auth']
    #         allow_methods: ['POST', 'PUT', 'GET', 'DELETE']
    #         max_age: 3600
    #     '^/':
    #         origin_regex: true
    #         allow_origin: ['^http://localhost:[0-9]+']
    #         allow_headers: ['X-Custom-Auth']
    #         allow_methods: ['POST', 'PUT', 'GET', 'DELETE']
    #         max_age: 3600
    #         hosts: ['^api\.']
 # app/config/config.yml
 # Configuracion de Swagger ruta/api/doc
nelmio_api_doc:
    documentation:
        info:
            title: Preinscripcion
            description: ""
            version: 1.0.0
    routes:
        path_patterns: # an array of regexps
            - ^/api

# FOSRest Configuration
fos_rest:
    body_listener: true
    format_listener:
        rules:
            - { path: '^/', priorities: ['json'], fallback_format: json, prefer_extension: false }
    param_fetcher_listener: true
    view:
        view_response_listener: 'force'
        formats:
            json: true

ekino_new_relic:
    enabled: true                         # Defaults to true
    application_name: encuesta_backend    # default value in newrelic is "PHP Application", or whatever is set
    deployment_names: ~                   # default value is 'application_name', supports string array or semi-colon separated string
    api_key: c2e55fe0ea402fa10d3b286b0c35189e71e4e041
    # api_key: 9eb6873fe2dde07a1d3b1c772a754f4a4c31b4221e4e041                              # New Relic API
    license_key: c2e55fe0ea402fa10d3b286b0c35189e71e4e041                          # New Relic license key (optional, default value is read from php.ini)
    xmit: false                           # if you want to record the metric data up to the point newrelic_set_appname is called, set this to true (default: false)
    logging: true                        # If true, logs all New Relic interactions to the Symfony log (default: false)
    instrument: false                     # If true, uses enhanced New Relic RUM instrumentation (see below) (default: false)
    log_exceptions: false                 # If true, sends exceptions to New Relic (default: false)
    log_commands: true                    # If true, logs CLI commands to New Relic as Background jobs (>2.3 only) (default: true)
    using_symfony_cache: false            # Symfony HTTP cache (see below) (default: false)
    transaction_naming: route             # route, controller or service (see below)
    transaction_naming_service: ~         # Transaction naming service (see below)
    ignored_routes: []                    # No transaction recorded for this routes
    ignored_paths: []                     # No transaction recorded for this paths
    ignored_commands: []                  # No transaction recorded for this commands (background tasks)
